/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SecureStorage,
  SecureStorageInterface,
} from "../../contracts/SecureStorage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "secretId",
        type: "string",
      },
    ],
    name: "DocumentDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "secretId",
        type: "string",
      },
    ],
    name: "DocumentRetrieved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "secretId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newIpfsHash",
        type: "string",
      },
    ],
    name: "DocumentUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "secretId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ipfsHash",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "fileName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fileSize",
        type: "uint256",
      },
    ],
    name: "DocumentUploaded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "secretId",
        type: "string",
      },
    ],
    name: "deleteDocument",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "secretId",
        type: "string",
      },
    ],
    name: "documentExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllDocuments",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "secretId",
            type: "string",
          },
          {
            internalType: "string",
            name: "ipfsHash",
            type: "string",
          },
          {
            internalType: "string",
            name: "encryptedMetadata",
            type: "string",
          },
          {
            internalType: "string",
            name: "fileName",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "fileSize",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "uploadedAt",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
        ],
        internalType: "struct SecureStorage.Document[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "secretId",
        type: "string",
      },
    ],
    name: "getDocument",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "secretId",
            type: "string",
          },
          {
            internalType: "string",
            name: "ipfsHash",
            type: "string",
          },
          {
            internalType: "string",
            name: "encryptedMetadata",
            type: "string",
          },
          {
            internalType: "string",
            name: "fileName",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "fileSize",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "uploadedAt",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
        ],
        internalType: "struct SecureStorage.Document",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDocumentCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "query",
        type: "string",
      },
    ],
    name: "searchDocuments",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "secretId",
            type: "string",
          },
          {
            internalType: "string",
            name: "ipfsHash",
            type: "string",
          },
          {
            internalType: "string",
            name: "encryptedMetadata",
            type: "string",
          },
          {
            internalType: "string",
            name: "fileName",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "fileSize",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "uploadedAt",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "active",
            type: "bool",
          },
        ],
        internalType: "struct SecureStorage.Document[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "secretId",
        type: "string",
      },
      {
        internalType: "string",
        name: "newIpfsHash",
        type: "string",
      },
      {
        internalType: "string",
        name: "encryptedMetadata",
        type: "string",
      },
      {
        internalType: "string",
        name: "fileName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "fileSize",
        type: "uint256",
      },
    ],
    name: "updateDocument",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "secretId",
        type: "string",
      },
      {
        internalType: "string",
        name: "ipfsHash",
        type: "string",
      },
      {
        internalType: "string",
        name: "encryptedMetadata",
        type: "string",
      },
      {
        internalType: "string",
        name: "fileName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "fileSize",
        type: "uint256",
      },
    ],
    name: "uploadDocument",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611de3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80636c867cae1161005b5780636c867cae146100fb5780637ccb6a641461010e5780637d2039901461012e5780639fa5f50b1461014e57600080fd5b80633026785f1461008d5780633d1c2273146100b5578063575c4b30146100d3578063635994f8146100e8575b600080fd5b6100a061009b366004611769565b610156565b60405190151581526020015b60405180910390f35b336000908152600260205260409020546040519081526020016100ac565b6100e66100e13660046117ab565b610194565b005b6100e66100f6366004611769565b610382565b6100e66101093660046117ab565b61047d565b61012161011c366004611769565b6107e5565b6040516100ac9190611956565b61014161013c366004611769565b610b2e565b6040516100ac9190611970565b6101416110d7565b33600090815260208190526040808220905161017590859085906119d2565b9081526040519081900360200190206006015460ff1690505b92915050565b336000908152602081905260409081902090516101b4908b908b906119d2565b9081526040519081900360200190206006015460ff166101ef5760405162461bcd60e51b81526004016101e6906119e2565b60405180910390fd5b856102385760405162461bcd60e51b81526020600482015260196024820152784950465320686173682063616e6e6f7420626520656d70747960381b60448201526064016101e6565b336000908152602081905260409081902090518891889161025c908d908d906119d2565b9081526020016040518091039020600101918261027a929190611aad565b50336000908152602081905260409081902090518691869161029f908d908d906119d2565b908152602001604051809103902060020191826102bd929190611aad565b5033600090815260208190526040908190209051849184916102e2908d908d906119d2565b90815260200160405180910390206003019182610300929190611aad565b5033600090815260208190526040908190209051829190610324908c908c906119d2565b9081526040519081900360200181206004019190915533907f20fb4bd081ed75e16d57b13585840b1b79808860dd65a1afce1274cf66ce20219061036f908c908c908c908c90611b97565b60405180910390a2505050505050505050565b336000908152602081905260409081902090516103a290849084906119d2565b9081526040519081900360200190206006015460ff166103d45760405162461bcd60e51b81526004016101e6906119e2565b3360009081526020819052604080822090516103f390859085906119d2565b9081526040805160209281900383019020600601805460ff191693151593909317909255336000908152600290915290812080549161043183611bdf565b9190505550336001600160a01b03167fc2ea192de214be95c1a703b6e429807b454f817a45a8872d4ed6145138a6e7f28383604051610471929190611bf6565b60405180910390a25050565b876104ca5760405162461bcd60e51b815260206004820152601960248201527f5365637265742049442063616e6e6f7420626520656d7074790000000000000060448201526064016101e6565b856105135760405162461bcd60e51b81526020600482015260196024820152784950465320686173682063616e6e6f7420626520656d70747960381b60448201526064016101e6565b33600090815260208190526040908190209051610533908b908b906119d2565b9081526040519081900360200190206006015460ff16156105a25760405162461bcd60e51b8152602060048201526024808201527f446f63756d656e742077697468207468697320494420616c72656164792065786044820152636973747360e01b60648201526084016101e6565b6040518060e001604052808a8a8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f8b0181900481028201810190925289815291810191908a908a9081908401838280828437600092019190915250505090825250604080516020601f890181900481028201810190925287815291810191908890889081908401838280828437600092019190915250505090825250604080516020601f8701819004810282018101909252858152918101919086908690819084018382808284376000920182905250938552505050602080830185905242604080850191909152600160609094019390935233825281905281902090516106cb908c908c906119d2565b908152604051908190036020019020815181906106e89082611c12565b50602082015160018201906106fd9082611c12565b50604082015160028201906107129082611c12565b50606082015160038201906107279082611c12565b506080820151600482015560a0820151600582015560c0909101516006909101805460ff191691151591909117905533600090815260016020818152604083208054928301815583529091200161077f898b83611aad565b5033600090815260026020526040812080549161079b83611cd2565b9190505550336001600160a01b03167f5f9e48b3ba565c40c313676d8b4177137023ddbc5a15113ec2b0a41b02c3cb4f8a8a8a8a88888860405161036f9796959493929190611ceb565b6107ed6116e1565b3360009081526020819052604090819020905161080d90859085906119d2565b9081526040519081900360200190206006015460ff1661083f5760405162461bcd60e51b81526004016101e6906119e2565b336001600160a01b03167ffbc25799a920092816a55bf98dc658305cfbbb18c44ee07c331c639467079897848460405161087a929190611bf6565b60405180910390a2336000908152602081905260409081902090516108a290859085906119d2565b90815260200160405180910390206040518060e00160405290816000820180546108cb90611a24565b80601f01602080910402602001604051908101604052809291908181526020018280546108f790611a24565b80156109445780601f1061091957610100808354040283529160200191610944565b820191906000526020600020905b81548152906001019060200180831161092757829003601f168201915b5050505050815260200160018201805461095d90611a24565b80601f016020809104026020016040519081016040528092919081815260200182805461098990611a24565b80156109d65780601f106109ab576101008083540402835291602001916109d6565b820191906000526020600020905b8154815290600101906020018083116109b957829003601f168201915b505050505081526020016002820180546109ef90611a24565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1b90611a24565b8015610a685780601f10610a3d57610100808354040283529160200191610a68565b820191906000526020600020905b815481529060010190602001808311610a4b57829003601f168201915b50505050508152602001600382018054610a8190611a24565b80601f0160208091040260200160405190810160405280929190818152602001828054610aad90611a24565b8015610afa5780601f10610acf57610100808354040283529160200191610afa565b820191906000526020600020905b815481529060010190602001808311610add57829003601f168201915b5050509183525050600482015460208201526005820154604082015260069091015460ff1615156060909101529392505050565b606081610b755760405162461bcd60e51b815260206004820152601560248201527451756572792063616e6e6f7420626520656d70747960581b60448201526064016101e6565b33600090815260016020908152604080832080548251818502810185019093528083529192909190849084015b82821015610c4e578382906000526020600020018054610bc190611a24565b80601f0160208091040260200160405190810160405280929190818152602001828054610bed90611a24565b8015610c3a5780601f10610c0f57610100808354040283529160200191610c3a565b820191906000526020600020905b815481529060010190602001808311610c1d57829003601f168201915b505050505081526020019060010190610ba2565b505033600090815260026020526040812054939450915082905067ffffffffffffffff811115610c8057610c80611a0e565b604051908082528060200260200182016040528015610cb957816020015b610ca66116e1565b815260200190600190039081610c9e5790505b5090506000805b845181101561101e573360009081526020819052604081208651879084908110610cec57610cec611d3c565b6020026020010151604051610d019190611d52565b90815260200160405180910390206040518060e0016040529081600082018054610d2a90611a24565b80601f0160208091040260200160405190810160405280929190818152602001828054610d5690611a24565b8015610da35780601f10610d7857610100808354040283529160200191610da3565b820191906000526020600020905b815481529060010190602001808311610d8657829003601f168201915b50505050508152602001600182018054610dbc90611a24565b80601f0160208091040260200160405190810160405280929190818152602001828054610de890611a24565b8015610e355780601f10610e0a57610100808354040283529160200191610e35565b820191906000526020600020905b815481529060010190602001808311610e1857829003601f168201915b50505050508152602001600282018054610e4e90611a24565b80601f0160208091040260200160405190810160405280929190818152602001828054610e7a90611a24565b8015610ec75780601f10610e9c57610100808354040283529160200191610ec7565b820191906000526020600020905b815481529060010190602001808311610eaa57829003601f168201915b50505050508152602001600382018054610ee090611a24565b80601f0160208091040260200160405190810160405280929190818152602001828054610f0c90611a24565b8015610f595780601f10610f2e57610100808354040283529160200191610f59565b820191906000526020600020905b815481529060010190602001808311610f3c57829003601f168201915b5050509183525050600482015460208201526005820154604082015260069091015460ff16151560609091015260c08101519091508015610fd95750610fd981600001518a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061158f92505050565b1561100b5780848481518110610ff157610ff1611d3c565b6020026020010181905250828061100790611cd2565b9350505b508061101681611cd2565b915050610cc0565b5060008167ffffffffffffffff81111561103a5761103a611a0e565b60405190808252806020026020018201604052801561107357816020015b6110606116e1565b8152602001906001900390816110585790505b50905060005b828110156110cb5783818151811061109357611093611d3c565b60200260200101518282815181106110ad576110ad611d3c565b602002602001018190525080806110c390611cd2565b915050611079565b50979650505050505050565b336000908152600160209081526040808320805482518185028101850190935280835260609493849084015b828210156111af57838290600052602060002001805461112290611a24565b80601f016020809104026020016040519081016040528092919081815260200182805461114e90611a24565b801561119b5780601f106111705761010080835404028352916020019161119b565b820191906000526020600020905b81548152906001019060200180831161117e57829003601f168201915b505050505081526020019060010190611103565b505033600090815260026020526040812054939450915082905067ffffffffffffffff8111156111e1576111e1611a0e565b60405190808252806020026020018201604052801561121a57816020015b6112076116e1565b8152602001906001900390816111ff5790505b5090506000805b84518110801561123057508382105b1561158557336000908152602081905260409020855186908390811061125857611258611d3c565b602002602001015160405161126d9190611d52565b9081526040519081900360200190206006015460ff16156115735733600090815260208190526040902085518690839081106112ab576112ab611d3c565b60200260200101516040516112c09190611d52565b90815260200160405180910390206040518060e00160405290816000820180546112e990611a24565b80601f016020809104026020016040519081016040528092919081815260200182805461131590611a24565b80156113625780601f1061133757610100808354040283529160200191611362565b820191906000526020600020905b81548152906001019060200180831161134557829003601f168201915b5050505050815260200160018201805461137b90611a24565b80601f01602080910402602001604051908101604052809291908181526020018280546113a790611a24565b80156113f45780601f106113c9576101008083540402835291602001916113f4565b820191906000526020600020905b8154815290600101906020018083116113d757829003601f168201915b5050505050815260200160028201805461140d90611a24565b80601f016020809104026020016040519081016040528092919081815260200182805461143990611a24565b80156114865780601f1061145b57610100808354040283529160200191611486565b820191906000526020600020905b81548152906001019060200180831161146957829003601f168201915b5050505050815260200160038201805461149f90611a24565b80601f01602080910402602001604051908101604052809291908181526020018280546114cb90611a24565b80156115185780601f106114ed57610100808354040283529160200191611518565b820191906000526020600020905b8154815290600101906020018083116114fb57829003601f168201915b5050509183525050600482015460208201526005820154604082015260069091015460ff161515606090910152835184908490811061155957611559611d3c565b6020026020010181905250818061156f90611cd2565b9250505b8061157d81611cd2565b915050611221565b5090949350505050565b815181516000918491849110156115ab5760009250505061018e565b80516000036115bf5760019250505061018e565b60005b815183516115d09190611d6e565b811161168657600160005b835181101561165f5761160d8482815181106115f9576115f9611d3c565b01602001516001600160f81b031916611692565b6001600160f81b031916611635866116258487611d81565b815181106115f9576115f9611d3c565b6001600160f81b0319161461164d576000915061165f565b8061165781611cd2565b9150506115db565b50801561167357600194505050505061018e565b508061167e81611cd2565b9150506115c2565b50600095945050505050565b6000604160f81b6001600160f81b03198316108015906116c05750602d60f91b6001600160f81b0319831611155b156116dd576116d460f883901c6020611d94565b60f81b92915050565b5090565b6040518060e001604052806060815260200160608152602001606081526020016060815260200160008152602001600081526020016000151581525090565b60008083601f84011261173257600080fd5b50813567ffffffffffffffff81111561174a57600080fd5b60208301915083602082850101111561176257600080fd5b9250929050565b6000806020838503121561177c57600080fd5b823567ffffffffffffffff81111561179357600080fd5b61179f85828601611720565b90969095509350505050565b600080600080600080600080600060a08a8c0312156117c957600080fd5b893567ffffffffffffffff808211156117e157600080fd5b6117ed8d838e01611720565b909b50995060208c013591508082111561180657600080fd5b6118128d838e01611720565b909950975060408c013591508082111561182b57600080fd5b6118378d838e01611720565b909750955060608c013591508082111561185057600080fd5b5061185d8c828d01611720565b9a9d999c50979a9699959894979660800135949350505050565b60005b8381101561189257818101518382015260200161187a565b50506000910152565b600081518084526118b3816020860160208601611877565b601f01601f19169290920160200192915050565b6000815160e084526118dc60e085018261189b565b9050602083015184820360208601526118f5828261189b565b9150506040830151848203604086015261190f828261189b565b91505060608301518482036060860152611929828261189b565b9150506080830151608085015260a083015160a085015260c0830151151560c08501528091505092915050565b60208152600061196960208301846118c7565b9392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156119c557603f198886030184526119b38583516118c7565b94509285019290850190600101611997565b5092979650505050505050565b8183823760009101908152919050565b602080825260129082015271111bd8dd5b595b9d081b9bdd08199bdd5b9960721b604082015260600190565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680611a3857607f821691505b602082108103611a5857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115611aa857600081815260208120601f850160051c81016020861015611a855750805b601f850160051c820191505b81811015611aa457828155600101611a91565b5050505b505050565b67ffffffffffffffff831115611ac557611ac5611a0e565b611ad983611ad38354611a24565b83611a5e565b6000601f841160018114611b0d5760008515611af55750838201355b600019600387901b1c1916600186901b178355611b67565b600083815260209020601f19861690835b82811015611b3e5786850135825560209485019460019092019101611b1e565b5086821015611b5b5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b604081526000611bab604083018688611b6e565b8281036020840152611bbe818587611b6e565b979650505050505050565b634e487b7160e01b600052601160045260246000fd5b600081611bee57611bee611bc9565b506000190190565b602081526000611c0a602083018486611b6e565b949350505050565b815167ffffffffffffffff811115611c2c57611c2c611a0e565b611c4081611c3a8454611a24565b84611a5e565b602080601f831160018114611c755760008415611c5d5750858301515b600019600386901b1c1916600185901b178555611aa4565b600085815260208120601f198616915b82811015611ca457888601518255948401946001909101908401611c85565b5085821015611cc25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060018201611ce457611ce4611bc9565b5060010190565b608081526000611cff60808301898b611b6e565b8281036020840152611d1281888a611b6e565b90508281036040840152611d27818688611b6e565b91505082606083015298975050505050505050565b634e487b7160e01b600052603260045260246000fd5b60008251611d64818460208701611877565b9190910192915050565b8181038181111561018e5761018e611bc9565b8082018082111561018e5761018e611bc9565b60ff818116838216019081111561018e5761018e611bc956fea26469706673582212202a9d4ebcf8ce523f629c08d42426ed971bf96b1e95c7943f071ddcd45e47e01864736f6c63430008140033";

type SecureStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SecureStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SecureStorage__factory extends ContractFactory {
  constructor(...args: SecureStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SecureStorage & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SecureStorage__factory {
    return super.connect(runner) as SecureStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SecureStorageInterface {
    return new Interface(_abi) as SecureStorageInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SecureStorage {
    return new Contract(address, _abi, runner) as unknown as SecureStorage;
  }
}
